import{atom as t,getter as e,setter as s,globalSignal as r}from"elum-state/solid";import{createSignal as n,createEffect as o}from"solid-js";const a=t({key:"%array%",default:{}}),u=t({key:"%time%",default:{}}),i=(t,r=5e4)=>{if(!e(a)[t])return;const n=setTimeout((()=>{s(a,(e=>{const{[t]:s,...r}=e;return r}))}),r+1e4);s(a,(e=>(e[t]?.clear&&clearTimeout(e[t]?.clear),{...e,[t]:{...e[t],clear:n}})))},c=(t,e,r)=>{s(a,(s=>({...s,[t]:{status:e,error:r,requests:{count:0,time:new Date}}}))),i(t)};var R=(t=>(t.START="start",t.START_LOADER="start_loader",t.END="end",t.ERROR="error",t.UNKNOWN="unknown",t))(R||{});const m=(t,e)=>{(t=>{s(u,(e=>(e[t]&&clearTimeout(e[t]),e)))})(t),c(t,e?R.ERROR:R.END,e)},T=(t,e=200)=>{c(t,R.START),((t,e=200)=>{const r=setTimeout((()=>c(t,R.START_LOADER)),e);s(u,(e=>(e[t]&&clearTimeout(e[t]),{...e,[t]:r}))),i(t,e)})(t,e)},l=(t,s={autoStart:!0,time:200})=>(s.autoStart&&T(t,s.time),{start:e=>T(t,e),end:e=>m(t,e),get:()=>e(a)[t]||{status:R.UNKNOWN}}),N=async(t,r,n,{onResponse:o,maxRequests:u=5,resetDuration:m=1e3})=>{const T=l(t);s(a,(e=>{let s=e[t]?.requests||{count:0,time:null};return s.time&&s.time.getTime()<Date.now()?(s.count=1,s.time=new Date(Date.now()+m)):(s.count+=1,s.time||(s.time=new Date(Date.now()+m))),{...e,[t]:{...e[t],...s}}})),i(t);if((e(a)[t]?.requests?.count||0)>=u&&o){if(o("maxRequests"))return"maxRequests"}try{const e=await fetch(r,n);if(e.ok||T.end({network:!0}),o){const{status:s,error:r}=o(e.clone()),n={[R.START]:()=>T.start(),[R.END]:()=>T.end(),[R.ERROR]:()=>T.end(r)};n[s]?n[s]():c(t,s)}return e}catch(t){throw T.end({unknown:!0}),t}},D=t=>{const[e]=r(a),[s,u]=n(e()[t]||{status:R.UNKNOWN});o((()=>{const s=e()[t]||{status:R.UNKNOWN};u(s)}));return[{status:s,isDisabled:t=>s().status===R.START||!!t,isLoader:t=>s().status===R.START_LOADER||!!t},(e,s)=>{const r={[R.START]:()=>T(t),[R.END]:()=>m(t),[R.ERROR]:()=>m(t,s)};r[e]?r[e]():c(t,e,s)}]};export{R as Status,m as end,N as fetchManager,D as globalRequestManager,l as requestManager,T as start};
